<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.meli.mutant</groupId>
	<artifactId>meli-mutant-finder</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<junit.version>4.12</junit.version>
		<mockito.version>2.8.47</mockito.version>
		<!-- 4.3.10.RELEASE -->
		<spring.generic.version>5.2.9.RELEASE</spring.generic.version>
		<skipUTs>${skipTests}</skipUTs>
	</properties>

	<dependencies>
		<!-- Testing Dependencies -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- END Testing Dependencies -->

		<!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>8.0.25</version>
		</dependency>


		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.generic.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-indexer</artifactId>
			<version>${spring.generic.version}</version>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>com.amazonaws.serverless</groupId>
			<artifactId>aws-serverless-java-container-spring</artifactId>
			<version>1.5</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.generic.version}</version>
		</dependency>

		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>aws-lambda-java-core</artifactId>
			<version>1.2.1</version>
		</dependency>
		<!-- <dependency> <groupId>com.amazonaws</groupId> <artifactId>aws-lambda-java-events</artifactId> 
			<version>3.1.0</version> </dependency> -->
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>@project.groupId@</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>@project.version@</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.1</version>
				<configuration>
					<excludes>
						<exclude>**/com/meli/**/config/**/*</exclude>
						<exclude>**/com/meli/**/model/**/*</exclude>
						<exclude>**/com/meli/mutant/StreamLambdaHandler.class</exclude>
						<exclude>**/com/meli/mutant/infraestructure/imp/AWSProxyDatabaseConnection.class</exclude>
						<exclude>**/com/meli/mutant/dao/imp/StatsDao.class</exclude>
					</excludes>
				</configuration>
				<executions>
					<execution>
						<id>jacoco-check</id>
						<phase>validate</phase>
						<goals>
							<goal>report</goal>
							<goal>check</goal>
						</goals>
						<configuration>
							<rules>
								<!--Requires a line coverage minimum of 60% for every class except 
									test classes -->
								<rule implementation="org.jacoco.maven.RuleConfiguration">
									<!--element>BUNDLE</element -->
									<element>CLASS</element>
									<excludes>
										<exclude>*Test</exclude>
									</excludes>
									<limits>
										<limit implementation="org.jacoco.report.check.Limit">
											<counter>INSTRUCTION</counter>
											<value>COVEREDRATIO</value>
											<minimum>0.2</minimum>
										</limit>
									</limits>
								</rule>
							</rules>
						</configuration>
					</execution>
					<execution>
						<id>jacoco-initialize</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>jacoco-site</id>
						<phase>package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<execution>
						<id>pre-integration-test</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<propertyName>failsafe.argLine</propertyName>
						</configuration>
					</execution>
					<execution>
						<id>post-integration-test</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.22.0</version>
				<configuration>
					<skipTests>${skipUTs}</skipTests>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.22.0</version>
				<configuration>
					<argLine>${failsafe.argLine}</argLine>
				</configuration>
				<executions>
					<execution>
						<id>integration-test</id>
						<goals>
							<goal>integration-test</goal>
						</goals>
					</execution>
					<execution>
						<id>verify</id>
						<goals>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>1.4.1</version>
				<configuration>
					<rules>
						<dependencyConvergence />
					</rules>
				</configuration>
			</plugin>

			<!-- <plugin> <artifactId>maven-assembly-plugin</artifactId> <executions> 
				<execution> <phase>package</phase> <goals> <goal>single</goal> </goals> </execution> 
				</executions> <configuration> <descriptorRefs> <descriptorRef>jar-with-dependencies</descriptorRef> 
				</descriptorRefs> </configuration> </plugin> -->

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>3.2.2</version>
				<configuration>
					<createDependencyReducedPom>false</createDependencyReducedPom>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.7</version>
				<configuration>
					<formats>
						<format>html</format>
						<format>xml</format>
					</formats>
					<check />
					<instrumentation>
						<excludes>
							<exclude>**/com/meli/**/config/**/*</exclude>
							<exclude>**/com/meli/mutant/model/DNAString.class</exclude>
							<exclude>**/com/meli/mutant/model/Dna.class</exclude>
							<exclude>**/com/meli/mutant/StreamLambdaHandler.class</exclude>
						</excludes>
					</instrumentation>
				</configuration>
			</plugin>

		</plugins>
	</build>

</project>